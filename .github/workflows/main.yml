name: Build R2S JetWRT

# Copyright (c) 2020, Chuck <fanck0605@qq.com>
#
# 警告:
# 对着屏幕的哥们, 我们允许你使用此脚本, 但不允许你抹去作者的信息, 请保留这段话.
# 你可以随意使用本脚本的代码, 但请注明出处.
#

on:
  push:
    branches:
      - JetWRT
    paths:
      - 'CHANGELOG.md'

env:
  SWAP_WANLAN: true
  OC_1500MHZ: true
  UPLOAD_FIRMWARE: true
  TZ: Asia/Hong_Kong

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: 'JetWRT'

      - name: Show system
        run: |
          uname -a
          [ -f /proc/version ] && cat /proc/version
          [ -f /etc/issue.net ] && cat /etc/issue.net
          [ -f /etc/issue ] && cat /etc/issue

      # refer to klever1988/nanopi-openwrt and soffchen/NanoPi-R2S
      - name: Initialize Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get -y purge dotnet* ghc* google* llvm* mysql* php* zulu* firefox hhvm
          sudo apt-get -y autoremove --purge
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk
          sudo docker image prune -a -f
          sudo apt-get update
          sudo apt-get -y install antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 \
          device-tree-compiler ecj fastjar file flex g++ g++-multilib gawk gcc-multilib gettext git git-core gperf \
          java-propose-classpath lib32gcc1 libc6-dev-i386 libelf-dev libglib2.0-dev libncurses5-dev libncursesw5-dev \
          libssl-dev libtool libz-dev msmtp p7zip p7zip-full patch python python3 python3.5 python3-distutils \
          qemu-utils subversion texinfo uglifyjs unzip upx wget xmlto zlib1g-dev
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash
          git config --global user.name "GitHubActions" && git config --global user.email "noreply@github.com"

      - name: Install Friendlyarm repo
        run: |
          rm -rf repo
          git clone --no-tags https://github.com/friendlyarm/repo
          sudo cp -f repo/repo /usr/bin/
          rm -rf repo

      - name: Initialize Source
        run: |
          rm -rf rk3328 && mkdir rk3328 && cd rk3328
          repo init -u https://github.com/fanck0605/friendlywrt_manifests -b master-v19.07.1 -m rk3328.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
          repo sync -c --no-clone-bundle -j8

      # refer to coolsnowwolf/lede
      - name: Unlock Some OpenWrt feeds
        run: |
          cd rk3328/friendlywrt
          sed -i 's/#src-git/src-git/g' ./feeds.conf.default

      # default version contains some bug
      - name: Upgrade Argon Theme and other packages
        run: |
          cd rk3328/friendlywrt/package/lean
          rm -rf luci-theme-argon
          git clone --no-tags --single-branch -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
          rm -rf luci-app-dockerman
          rm -rf luci-app-diskman
          git clone --no-tags https://github.com/lisaac/luci-app-dockerman.git
          git clone --no-tags https://github.com/lisaac/luci-app-diskman.git

      # refer to klever1988/nanopi-openwrt, modified by Chuck <fanck0605@qq.com>
      - name: Install Openwrt Patches
        run: |
          rm -rf openwrt
          git clone --no-tags --single-branch https://github.com/openwrt/openwrt.git --depth=1
          cd openwrt
          ./scripts/patch-kernel.sh ../rk3328/kernel ./target/linux/generic/backport-5.4
          ./scripts/patch-kernel.sh ../rk3328/kernel ./target/linux/generic/pending-5.4
          ./scripts/patch-kernel.sh ../rk3328/kernel ./target/linux/generic/hack-5.4
          ./scripts/patch-kernel.sh ../rk3328/kernel ./target/linux/octeontx/patches-5.4
          cp -a ./target/linux/generic/files/* ../rk3328/kernel/
          cd ../ && rm -rf openwrt

      # refer to klever1988/nanopi-openwrt, modified by Chuck <fanck0605@qq.com>
      - name: Enable Kernel Futures
        run: |
          cd rk3328/kernel/
          wget -O net/netfilter/xt_FULLCONENAT.c https://raw.githubusercontent.com/Chion82/netfilter-full-cone-nat/master/xt_FULLCONENAT.c
          git apply ../../patches/001-kernel-add-full_cone_nat.patch
          cat ../../nanopi-r2_linux_defconfig > ./arch/arm64/configs/nanopi-r2_linux_defconfig

      - name: Customize Configuration Files
        run: |
          cp config_rk3328 rk3328/configs/config_rk3328
          cat more_packages >> rk3328/configs/config_rk3328

      - name: Swap WAN and LAN
        if: env.SWAP_WANLAN == 'true'
        run: |
          cd rk3328/friendlywrt
          git apply ../../patches/003-openwrt-swap-wan-and-lan.patch

      - name: Enable 1.5GHz
        if: env.OC_1500MHZ == 'true'
        run: |
          cd rk3328/kernel
          wget https://github.com/armbian/build/raw/master/patch/kernel/rockchip64-dev/RK3328-enable-1512mhz-opp.patch
          git apply RK3328-enable-1512mhz-opp.patch

      - name: Modify
        run: |
          cd rk3328/friendlywrt
          TODAY=$(date "+%Y.%m.%d")
          sed -i "s/OpenWrt/JetWRT Build $TODAY @ OpenWrt/g" package/lean/default-settings/files/zzz-default-settings
          echo -e "\nWelcome to JetWRT (Build $TODAY)\n" >> package/base-files/files/etc/banner
          unset TODAY
          mv ../../r2s/screenrc package/base-files/files/root/.screenrc
          sed -i '/exit/i\find /etc/rc.d/ -name *docker* -delete' package/lean/default-settings/files/zzz-default-settings
          sed -i '/uci commit luci/a\uci commit dropbear' package/lean/default-settings/files/zzz-default-settings
          sed -i '/uci commit luci/a\uci set dropbear.@dropbear[0].Interface='lan'' package/lean/default-settings/files/zzz-default-settings
          sed -i '/uci commit luci/a\uci commit firewall' package/lean/default-settings/files/zzz-default-settings
          sed -i '/uci commit luci/a\uci set firewall.@zone[1].forward=REJECT' package/lean/default-settings/files/zzz-default-settings
          sed -i '/uci commit luci/a\uci set firewall.@zone[1].input=REJECT' package/lean/default-settings/files/zzz-default-settings

      # 编译时不要去除 set -e, 编译都报错了, 你还让它继续, 最后的固件能没有 bug?
      - name: Build FriendlyWrt
        run: |
          cd rk3328
          ./build.sh nanopi_r2s.mk

      - name: Fix FriendlyWrt rootfs owner and group
        run: |
          sudo df -lh
          lodev=$(sudo losetup -f)
          echo "found unused loop dev $lodev"
          sudo losetup -o 100663296 $lodev rk3328/out/*.img
          sudo rm -rf /mnt/friendlywrt-tmp
          sudo mkdir -p /mnt/friendlywrt-tmp
          sudo mount $lodev /mnt/friendlywrt-tmp
          sudo chown -R root:root /mnt/friendlywrt-tmp
          sudo umount /mnt/friendlywrt-tmp
          sudo losetup -d $lodev

      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          mv rk3328/out/*img* ./artifact/
          cd ./artifact/
          gzip --best --keep *.img

      - name: Save Configurations
        run: |
          cd rk3328/friendlywrt
          ./scripts/diffconfig.sh > ../../artifact/config-lite
          cp .config ../../artifact/config-full
          cd ../kernel
          export PATH=/opt/FriendlyARM/toolchain/6.4-aarch64/bin/:$PATH
          export CROSS_COMPILE='aarch64-linux-gnu-'
          export ARCH=arm64
          make savedefconfig
          cp .config ../../artifact/kconfig-full
          cp defconfig ../../artifact/kconfig-lite

      - name: Build Time Information
        run: |
          cd rk3328/friendlywrt
          SourceVersion=$(git show -s --date=short --format="%cd_%H")
          echo "::set-env name=SourceVersion::$SourceVersion"
          echo "::set-env name=DATETIME::$(date "+%Y%m%d-%H%M")"

      - name: Organize Files and Generate Hash Checksum
        run: |
          cd ./artifact/
          echo -e "FriendlyWrt source:\t${{ env.SourceVersion }}" > about.txt
          echo -e "Build script:\t${{ github.sha }}" >> about.txt
          echo -e "Build time:\t${{ env.DATETIME }}" >> about.txt
          sha256sum * | tee hashes_${{ env.DATETIME }}.sha256
          rm -f *.img
          echo "::set-env name=FIRMWARE::$PWD"
          echo "::set-output name=status::success"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        with:
          name: R2S-JetWrt_${{ env.DATETIME }}
          path: ${{ env.FIRMWARE }}
